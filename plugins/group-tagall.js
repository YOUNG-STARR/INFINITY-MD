const config = require('../config')
const { cmd, commands } = require('../command')
const { getBuffer, getGroupAdmins, getRandom, h2k, isUrl, Json, runtime, sleep, fetchJson} = require('../lib/functions')

cmd({
    pattern: "tagall",
    react: "üîä",
    alias: ["gc_tagall"],
    desc: "To Tag all Members",
    category: "group",
    use: '.tagall [message]',
    filename: __filename
},
async (conn, mek, m, { from, participants, reply, isGroup, senderNumber, groupAdmins, prefix, command, args, body }) => {
    try {
        if (!isGroup) return reply("‚ùå Cette commande est r√©serv√©e aux groupes.");

        const botOwner = conn.user.id.split(":")[0];
        const senderJid = senderNumber + "@s.whatsapp.net";

        if (!groupAdmins.includes(senderJid) && senderNumber !== botOwner) {
            return reply("‚ùå Seuls les administrateurs du groupe ou le propri√©taire du bot peuvent utiliser cette commande.");
        }

        let groupInfo = await conn.groupMetadata(from).catch(() => null);
        if (!groupInfo) return reply("‚ùå Impossible de r√©cup√©rer les informations du groupe.");

        let groupName = groupInfo.subject || "Groupe inconnu";
        let totalMembers = participants ? participants.length : 0;
        if (totalMembers === 0) return reply("‚ùå Aucun membre trouv√© dans ce groupe.");

        let emojis = ['üì¢', 'üîä', 'üåê', 'üî∞', '‚ù§‚Äçü©π', 'ü§ç', 'üñ§', 'ü©µ', 'üìù', 'üíó', 'üîñ', 'ü™©', 'üì¶', 'üéâ', 'üõ°Ô∏è', 'üí∏', '‚è≥', 'üóø', 'üöÄ', '‚ùÑÔ∏è', 'üë®‚Äçüíª', '‚ö†Ô∏è', 'üî•'];
        let randomEmoji = emojis[Math.floor(Math.random() * emojis.length)];

        let message = body.slice(body.indexOf(command) + command.length).trim();
        if (!message) message = "„Äò üîî Attention tout le monde ! „Äô";

        let teks = `‚ï≠‚îÄ‚ùñ„Äå *üì¢ TAGALL* „Äç\n‚îÇ\n`;
        teks += `‚îÇ üéØ *Groupe* : ${groupName}\n`;
        teks += `‚îÇ üë• *Membres* : ${totalMembers}\n`;
        teks += `‚îÇ üí¨ *Message* : ${message}\n‚îÇ\n`;
        teks += `‚ï∞‚îÄ‚ä∑ *Mentions*\n\n`;

        for (let mem of participants) {
            if (!mem.id) continue;
            teks += `${randomEmoji} @${mem.id.split('@')[0]}\n`;
        }

        teks += `\n‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ[ üî∞ INFINITY-MD üî∞ ]‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ\n       Powered by SIRIUS\n‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ`;

        conn.sendMessage(from, { text: teks, mentions: participants.map(a => a.id) }, { quoted: mek });

    } catch (e) {
        console.error("TagAll Error:", e);
        reply(`‚ùå *Erreur rencontr√©e !*\n\n${e.message || e}`);
    }
});
